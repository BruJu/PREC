@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix prec: <http://bruy.at/prec#> .
@prefix : <http://test/> .


prec:testMetaData prec:kind "SmallExamples" .

###############################################################################
# Relationship test

[] a prec:unitTest ;
   :usedCypherQuery
   '''
   create
       (alice:Person),
       (charlie:Person),
       (apple),
       (alice)-[:Knows]->(charlie),
       (alice)-[:Knows]->(apple)
   ''' ;
   prec:context :relationContext ;
   prec:output  :relationOutput ;
   prec:propertyGraph
   '''
        {"type":"node","id":"3","labels":["Person"]}
        {"type":"node","id":"4","labels":["Person"]}
        {"type":"node","id":"5"}
        {"id":"4","type":"relationship","label":"Knows","start":{"id":"3","labels":["Person"]},"end":{"id":"4","labels":["Person"]}}
        {"id":"5","type":"relationship","label":"Knows","start":{"id":"3","labels":["Person"]},"end":{"id":"5"}}
   '''
   .

:relationContext {
    prec:Relationships prec:templatedBy prec:RdfStarUnique .
    prec:KeepProvenance prec:flagState false .

    :Person prec:IRIOfNodeLabel "Person" .

    :LongRule a prec:RelationshipRule ;
        prec:relationshipIRI :knows ;
        prec:relationshipLabel "Knows" ;
        prec:destinationLabel  "Person" .

    :knowsAbout prec:IRIOfRelationship "Knows" .
}

:relationOutput {
    _:alice :knows _:charlie .
    _:alice a :Person . 
    _:charlie a :Person .
    _:alice :knowsAbout _:apple .
}


###############################################################################

:eggPropertyGraph prec:testContent '{"type":"node","id":"5","labels":["Food", "Animal"],"properties":{"name":"Oeufs"}}' .


[] a prec:unitTest ;
   prec:context :allPriority ;
   prec:output  :allPriorityResult ;
   prec:propertyGraph :eggPropertyGraph .


[] a prec:unitTest ;
   prec:context :animalPriority ;
   prec:output  :animalPriorityResult ;
   prec:propertyGraph :eggPropertyGraph .
   
[] a prec:unitTest ;
   prec:context :foodPriority ;
   prec:output  :foodPriorityResult ;
   prec:propertyGraph :eggPropertyGraph .
   
[] a prec:unitTest ;
   prec:context :priorityGraphBase ;
   prec:output  :animalPriorityResult ;
   prec:propertyGraph :eggPropertyGraph .


:priorityGraphBase {
    prec:Properties prec:templatedBy prec:DirectTriples .
    prec:KeepProvenance prec:flagState false .
    
    :Food   prec:IRIOfNodeLabel "Food" .
    :Animal prec:IRIOfNodeLabel "Animal" .
    
    :prop_food_name a prec:PropertyRule ;
                    prec:propertyIRI :food_name ;
                    prec:propertyName "name" ;
                    prec:nodeLabel "Food" .

    :prop_animal_name a prec:PropertyRule ;
                    prec:propertyIRI :animal_name;
                    prec:propertyName "name" ;
                    prec:nodeLabel "Animal" .

    :prop_all_name a prec:PropertyRule ;
                    prec:propertyIRI :all_name;
                    prec:propertyName "name" .
}

:priorityGraphBase prec:testIsBaseOf :allPriority, :animalPriority, :foodPriority, :defaultPriority .

:allPriority {
    :prop_food_name   prec:priority 1 .
    :prop_animal_name prec:priority 2 .
    :prop_all_name    prec:priority 3 .
}

:animalPriority {
    :prop_food_name   prec:priority 2 .
    :prop_animal_name prec:priority 3 .
    :prop_all_name    prec:priority 1 .
}

:foodPriority {
    :prop_food_name   prec:priority 3 .
    :prop_animal_name prec:priority 2 .
    :prop_all_name    prec:priority 1 .
}

:allPriorityResult    { _:egg a :Food, :Animal ; :all_name    "Oeufs" . }
:animalPriorityResult { _:egg a :Food, :Animal ; :animal_name "Oeufs" . }
:foodPriorityResult   { _:egg a :Food, :Animal ; :food_name   "Oeufs" . }

################################################################################



[] a prec:unitTest ;
   prec:context :listTestContext ;
   prec:output  :listTestInput ;
   prec:propertyGraph
   '''
        {"type":"node","id":"1","labels":[], "properties":{ "elements": ["a", "b"] }}
   '''
   .


:listTestContext {
    prec:KeepProvenance prec:flagState false .
    :elements prec:IRIOfProperty "elements" .
}


:listTestInput {
    _:node :elements [ rdf:value ( "a" "b" ) ] .
 }

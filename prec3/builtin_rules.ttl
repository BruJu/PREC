PREFIX prec:  <http://bruy.at/prec#>
PREFIX pvar:  <http://bruy.at/prec-trans#>
PREFIX pgo:   <http://ii.uwb.edu.pl/pgo#>
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>       .


# = Special rules:
# prec:Relationships         : every relationship
# prec:Properties            : every property
# prec:NodeProperties        : every property on nodes       , disables prec:Properties on nodes
# prec:RelationshipProperties: every property on relationship, disables prec:Properties on relationships


####################
# ==== Relationships

# - These rules are for the following pattern:
# pvar:self a pgo:Edge
# pvar:self rdf:subject      pvar:source
# pvar:self rdf:predicate    pvar:relationshipIRI
# pvar:self rdf:object       pvar:destination
# pvar:self pvar:propertyKey pvar:propertyValue

# Encoding as standard RDF Reificaiton. It is the default pattern, so this
# target is not useful in this form.
prec:RDFReification a prec:EdgeTransformation ;
  prec:composedOf
    << pvar:self a pgo:Edge >> ,
    << pvar:self rdf:subject      pvar:source          >> ,
    << pvar:self rdf:predicate    pvar:relationshipIRI >> ,
    << pvar:self rdf:object       pvar:destination     >> ,
    << pvar:self pvar:propertyKey pvar:propertyValue   >>
  .

# Encoding as RDF star using regular RDF triples that can be annotated
prec:RdfStarUnique a prec:EdgeTransformation ;
  prec:composedOf
    <<    pvar:source pvar:relationshipIRI pvar:destination               >> ,
    << << pvar:source pvar:relationshipIRI pvar:destination >> a pgo:Edge >> ,
    << << pvar:source pvar:relationshipIRI pvar:destination >> pvar:propertyKey pvar:propertyValue >> 
  .

# Encoding as RDF star using occurrences
prec:RdfStarOccurrence a prec:EdgeTransformation ;
  prec:composedOf
    << pvar:self prec:occurrenceOf << pvar:source pvar:relationshipIRI pvar:destination >> >> ,
    << pvar:self a pgo:Edge >> ,
    << pvar:self pvar:propertyKey pvar:propertyValue >>
  .

# Encoding as singleton property
prec:SingletonProperty a prec:EdgeTransformation ;
  prec:composedOf
    << pvar:source pvar:self               pvar:destination     >> ,
    << pvar:self   rdf:singletonPropertyOf pvar:relationshipIRI >> ,
    << pvar:self a pgo:Edge >> ,
    << pvar:self   pvar:propertyKey        pvar:propertyValue   >>
  .


#######################
# ==== Pattern renaming

prec:substitutionTarget rdfs:domain prec:SubstitutionTerm .

prec:subject         a prec:SubstitutionTerm ; prec:substitutionTarget rdf:subject   .
prec:predicate       a prec:SubstitutionTerm ; prec:substitutionTarget rdf:predicate .
prec:object          a prec:SubstitutionTerm ; prec:substitutionTarget rdf:object    .

prec:relationshipIRI a prec:SubstitutionTerm ; prec:substitutionTarget pvar:relationshipIRI .
prec:propertyIRI     a prec:SubstitutionTerm ; prec:substitutionTarget pvar:propertyKey     .

prec:propertyValue   a prec:SubstitutionTerm ; prec:substitutionTarget pvar:propertyValue .

#################
# ==== Properties

# - These rules match the pattern
# pvar:entity           pvar:propertyKey       pvar:property
# pvar:property         rdf:value              pvar:propertyValue
# pvar:property         a prec:PropertyValue .
# pvar:property         prec:hasMetaProperties pvar:MetaPropertyNode  # optional
# pvar:metaPropertyNode pvar:metaPropertyKey   pvar:metaPropertyValue # 0...n
#
# For meta properties, the property rule is applied recursively.
#
# With:
# pvar:propertyKey   a prec:PropertyKey   .


# prec:PropertyTransformation patterns must:
# - Keep entity in subject position (or subject-subject, ...)
# - pvar:metaPropertyKey and pvar:metaPropertyValue are only usable in triples
# of form << ?s pvar:metaPropertyKey pvar:metaPropertyValue >>
# - Embedded triples used in property model must be asserted.

prec:Prec0Property a prec:PropertyTransformation ;
  prec:composedOf
    << pvar:entity           pvar:propertyKey       pvar:property          >> ,
    << pvar:property         rdf:value              pvar:propertyValue     >> ,
    << pvar:property         rdf:type               prec:PropertyValue     >> ,
    << pvar:property         prec:hasMetaProperties pvar:metaPropertyNode  >> ,
    << pvar:metaPropertyNode pvar:metaPropertyKey   pvar:metaPropertyValue >> .

prec:DirectTriples a prec:PropertyTransformation ;
  prec:composedOf
    <<    pvar:entity pvar:propertyKey pvar:propertyValue >> ,
    << << pvar:entity pvar:propertyKey pvar:propertyValue >> pvar:metaPropertyKey pvar:metaPropertyValue >> ;
  rdfs:comment
    """
    This model shold not be used if a node or an edge has a multi valued
    property with at least twice the same value.
    """@en
    .

prec:CombinedBlankNodes a prec:PropertyTransformation ;
  prec:composedOf
    << pvar:entity   pvar:propertyKey     pvar:property          >> ,
    << pvar:property rdf:value            pvar:propertyValue     >> ,
    << pvar:property rdf:type             prec:PropertyValue     >> ,
    << pvar:property pvar:metaPropertyKey pvar:metaPropertyValue >> .

PREFIX prec:  <http://bruy.at/prec#>
PREFIX pvar:  <http://bruy.at/prec-trans#>
PREFIX pgo:   <http://ii.uwb.edu.pl/pgo#>
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>       .

####################
# ==== Relationships

# - These rules are for the following pattern:
# pvar:self a pgo:Edge
# pvar:self rdf:subject      pvar:source
# pvar:self rdf:predicate    pvar:relationLabel
# pvar:self rdf:object       pvar:destination
# pvar:self pvar:propertyKey pvar:propertyValue

# Encoding as standard RDF Reificaiton. It is the default pattern, so this
# target is not useful in this form.
prec:RDFReification a prec:EdgeTransformation ;
  prec:composedOf
    << pvar:self a pgo:Edge >> ,
    << pvar:self rdf:subject      pvar:source        >> ,
    << pvar:self rdf:predicate    pvar:relationLabel >> ,
    << pvar:self rdf:object       pvar:destination   >> ,
    << pvar:self pvar:propertyKey pvar:propertyValue >>
  .

# Encoding as RDF star using regular RDF triples that can be annotated
prec:RdfStarUnique a prec:EdgeTransformation ;
  prec:composedOf
    <<    pvar:source pvar:relationLabel pvar:destination               >> ,
    << << pvar:source pvar:relationLabel pvar:destination >> a pgo:Edge >> ,
    << << pvar:source pvar:relationLabel pvar:destination >> pvar:propertyKey pvar:propertyValue >> 
  .

# Encoding as RDF star using occurrences
prec:RdfStarOccurrence a prec:EdgeTransformation ;
  prec:composedOf
    << pvar:self prec:occurrenceOf << pvar:source pvar:relationLabel pvar:destination >> >> ,
    << pvar:self a pgo:Edge >> ,
    << pvar:self pvar:propertyKey pvar:propertyValue >>
  .

# Encoding as singleton property
prec:SingletonProperty a prec:EdgeTransformation ;
  prec:composedOf
    << pvar:source pvar:self               pvar:destination   >> ,
    << pvar:self   rdf:singletonPropertyOf pvar:relationLabel >> ,
    << pvar:self a pgo:Edge >> ,
    << pvar:self   pvar:propertyKey        pvar:propertyValue >>
  .


#######################
# ==== Pattern renaming

prec:substitutionTarget rdfs:domain prec:SubstitutionTerm .

prec:subject   a prec:SubstitutionTerm ; prec:substitutionTarget rdf:subject   .
prec:predicate a prec:SubstitutionTerm ; prec:substitutionTarget rdf:predicate .
prec:object    a prec:SubstitutionTerm ; prec:substitutionTarget rdf:object    .


#################
# ==== Properties

# - These rules match the pattern
# pvar:entity   pvar:propertyKey       pvar:property
# pvar:property rdf:value              pvar:propertyValue
# pvar:property prec:hasMetaProperties pvar:MetaProperties
#
# For meta properties, the property rule is applied recursively.
#
# With:
# pvar:propertyKey   a prec:PropertyKey   .
# pvar:propertyValue a prec:PropertyValue .


# prec:PropertyTransformation patterns must:
# - Keep entity in subject position
# - prec:receiveFrom appear at most once

prec:DirectTriples a prec:PropertyTransformation ;
  prec:composedOf
    <<    pvar:entity pvar:propertyKey pvar:propertyValue                                         >> ,
    << << pvar:entity pvar:propertyKey pvar:propertyValue >> prec:receiveFrom pvar:MetaProperties >> .

prec:CombinedBlankNodes a prec:PropertyTransformation ;
  prec:composedOf
    << pvar:entity   pvar:propertyKey pvar:property       >> ,
    << pvar:property rdf:value        pvar:propertyValue  >> ,
    << pvar:property prec:receiveFrom pvar:MetaProperties >> .

